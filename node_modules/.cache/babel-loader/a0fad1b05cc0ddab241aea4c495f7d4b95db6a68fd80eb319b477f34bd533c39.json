{"ast":null,"code":"var _jsxFileName = \"/home/vaslyb/Desktop/witheflow/annotator/src/components/Annotation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Annotation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Annotation = () => {\n  _s();\n  const circleRef = useRef(null);\n  const dotRef = useRef(null);\n  const [isTracking, setIsTracking] = useState(false);\n  const [prevRelativeX, setPrevRelativeX] = useState(null);\n  const [prevRelativeY, setPrevRelativeY] = useState(null);\n  const updateCoordinates = () => {\n    const circle = circleRef.current;\n    if (circle) {\n      const rect = circle.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n\n      // Calculate relative coordinates\n      const relativeX = 0; // Placeholder for now\n      const relativeY = 0; // Placeholder for now\n\n      // Check if the circle is stable and its position has not changed\n      if (relativeX === prevRelativeX && relativeY === prevRelativeY && prevRelativeX !== null &&\n      // Ensure prevRelativeX and prevRelativeY have been initialized\n      prevRelativeY !== null) {\n        // Log only if the circle is stable and its position hasn't changed\n        console.log(`Stable Circle - Relative X: ${prevRelativeX}, Relative Y: ${prevRelativeY}`);\n      }\n    }\n  };\n  const handleMove = event => {\n    const moveX = event.clientX || event.touches && event.touches[0].clientX;\n    const moveY = event.clientY || event.touches && event.touches[0].clientY;\n    const circle = circleRef.current;\n    const dot = dotRef.current;\n    if (circle && dot) {\n      const rect = circle.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n      const relativeX = moveX - centerX;\n      const relativeY = moveY - centerY;\n\n      // Check if the mouse/touch event occurred within the circle\n      const distanceFromCenter = Math.sqrt(Math.pow(relativeX, 2) + Math.pow(relativeY, 2));\n      const isInsideCircle = distanceFromCenter <= rect.width / 2;\n      if (isInsideCircle) {\n        // Update dot position only if inside the circle\n        dot.style.left = `${moveX}px`;\n        dot.style.top = `${moveY}px`;\n      }\n      console.log(`Relative X: ${relativeX}, Relative Y: ${relativeY}`);\n      setPrevRelativeX(relativeX);\n      setPrevRelativeY(relativeY);\n    }\n  };\n  const handleMouseDown = event => {\n    setIsTracking(true);\n    handleMove(event); // Register initial click coordinates\n    document.addEventListener('mousemove', handleMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n  const handleMouseUp = () => {\n    setIsTracking(false);\n    document.removeEventListener('mousemove', handleMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n  const handleTouchStart = event => {\n    setIsTracking(true);\n    handleMove(event); // Register initial touch coordinates\n    document.addEventListener('touchmove', handleMove);\n    document.addEventListener('touchend', handleTouchEnd);\n  };\n  const handleTouchEnd = () => {\n    setIsTracking(false);\n    document.removeEventListener('touchmove', handleMove);\n    document.removeEventListener('touchend', handleTouchEnd);\n  };\n  useEffect(() => {\n    let intervalId;\n    if (isTracking) {\n      intervalId = setInterval(updateCoordinates, 100);\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [isTracking]);\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `circle-container ${isTracking ? 'tracking' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: circleRef,\n      onMouseDown: handleMouseDown,\n      onTouchStart: handleTouchStart,\n      className: \"circle\",\n      title: \"Annotation Circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dotRef,\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Annotation, \"eLjafokkD0/21pDho1I7jjcSHZA=\");\n_c = Annotation;\nexport default Annotation;\nvar _c;\n$RefreshReg$(_c, \"Annotation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Annotation","_s","circleRef","dotRef","isTracking","setIsTracking","prevRelativeX","setPrevRelativeX","prevRelativeY","setPrevRelativeY","updateCoordinates","circle","current","rect","getBoundingClientRect","centerX","left","width","centerY","top","height","relativeX","relativeY","console","log","handleMove","event","moveX","clientX","touches","moveY","clientY","dot","distanceFromCenter","Math","sqrt","pow","isInsideCircle","style","handleMouseDown","document","addEventListener","handleMouseUp","removeEventListener","handleTouchStart","handleTouchEnd","intervalId","setInterval","clearInterval","className","children","ref","onMouseDown","onTouchStart","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vaslyb/Desktop/witheflow/annotator/src/components/Annotation.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './Annotation.css';\n\nconst Annotation = () => {\n  const circleRef = useRef(null);\n  const dotRef = useRef(null);\n  const [isTracking, setIsTracking] = useState(false);\n  const [prevRelativeX, setPrevRelativeX] = useState(null);\n  const [prevRelativeY, setPrevRelativeY] = useState(null);\n\n  const updateCoordinates = () => {\n    const circle = circleRef.current;\n    if (circle) {\n      const rect = circle.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n  \n      // Calculate relative coordinates\n      const relativeX = 0; // Placeholder for now\n      const relativeY = 0; // Placeholder for now\n  \n      // Check if the circle is stable and its position has not changed\n      if (\n        relativeX === prevRelativeX && \n        relativeY === prevRelativeY &&\n        prevRelativeX !== null && // Ensure prevRelativeX and prevRelativeY have been initialized\n        prevRelativeY !== null\n      ) {\n        // Log only if the circle is stable and its position hasn't changed\n        console.log(`Stable Circle - Relative X: ${prevRelativeX}, Relative Y: ${prevRelativeY}`);\n      }\n    }\n  };\n  \n\n  const handleMove = (event) => {\n    const moveX = event.clientX || (event.touches && event.touches[0].clientX);\n    const moveY = event.clientY || (event.touches && event.touches[0].clientY);\n  \n    const circle = circleRef.current;\n    const dot = dotRef.current;\n    if (circle && dot) {\n      const rect = circle.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n      \n      const relativeX = moveX - centerX;\n      const relativeY = moveY - centerY;\n  \n      // Check if the mouse/touch event occurred within the circle\n      const distanceFromCenter = Math.sqrt(\n        Math.pow(relativeX, 2) + Math.pow(relativeY, 2)\n      );\n      const isInsideCircle = distanceFromCenter <= rect.width / 2;\n  \n      if (isInsideCircle) {\n        // Update dot position only if inside the circle\n        dot.style.left = `${moveX}px`;\n        dot.style.top = `${moveY}px`;\n      }\n      console.log(`Relative X: ${relativeX}, Relative Y: ${relativeY}`);\n      setPrevRelativeX(relativeX);\n      setPrevRelativeY(relativeY);\n  \n    }\n  };\n  \n  \n  \n\n  const handleMouseDown = (event) => {\n    setIsTracking(true);\n    handleMove(event); // Register initial click coordinates\n    document.addEventListener('mousemove', handleMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const handleMouseUp = () => {\n    setIsTracking(false);\n    document.removeEventListener('mousemove', handleMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n  };\n\n  const handleTouchStart = (event) => {\n    setIsTracking(true);\n    handleMove(event); // Register initial touch coordinates\n    document.addEventListener('touchmove', handleMove);\n    document.addEventListener('touchend', handleTouchEnd);\n  };\n\n  const handleTouchEnd = () => {\n    setIsTracking(false);\n    document.removeEventListener('touchmove', handleMove);\n    document.removeEventListener('touchend', handleTouchEnd);\n  };\n\n  useEffect(() => {\n    let intervalId;\n    if (isTracking) {\n      intervalId = setInterval(updateCoordinates, 100);\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [isTracking]);\n\n  useEffect(() => {\n    return () => {\n      document.removeEventListener('mousemove', handleMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.removeEventListener('touchmove', handleMove);\n      document.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, []);\n\n  return (\n    <div className={`circle-container ${isTracking ? 'tracking' : ''}`}>\n      <div\n        ref={circleRef}\n        onMouseDown={handleMouseDown}\n        onTouchStart={handleTouchStart}\n        className=\"circle\"\n        title=\"Annotation Circle\"\n      >\n      </div>\n      <div ref={dotRef} className=\"dot\"></div>\n    </div>\n  );\n};\n\nexport default Annotation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}