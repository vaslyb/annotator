{"ast":null,"code":"var _jsxFileName = \"/home/vaslyb/Desktop/witheflow/web_app/annotator/src/components/List.js\";\n// src/components/List.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  recordings,\n  onSelectRecording\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-container\",\n    children: recordings.length > 0 ? recordings.map((recording, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      // Ensure keys are unique\n      className: \"list-button\",\n      onClick: () => onSelectRecording(recording.id),\n      children: [\"Recording \", recording.id]\n    }, recording.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recordings available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) // Handle empty recordings array\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// Optional: PropTypes for validation\n_c = List;\nList.propTypes = {\n  recordings: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })).isRequired,\n  onSelectRecording: PropTypes.func.isRequired\n};\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","List","recordings","onSelectRecording","className","children","length","map","recording","index","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","shape","oneOfType","string","number","isRequired","func","$RefreshReg$"],"sources":["/home/vaslyb/Desktop/witheflow/web_app/annotator/src/components/List.js"],"sourcesContent":["// src/components/List.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './List.css';\n\nconst List = ({ recordings, onSelectRecording }) => {\n  return (\n    <div className=\"list-container\">\n      {recordings.length > 0 ? (\n        recordings.map((recording, index) => (\n          <button\n            key={recording.id || index} // Ensure keys are unique\n            className=\"list-button\"\n            onClick={() => onSelectRecording(recording.id)}\n          >\n            Recording {recording.id}\n          </button>\n        ))\n      ) : (\n        <p>No recordings available.</p> // Handle empty recordings array\n      )}\n    </div>\n  );\n};\n\n// Optional: PropTypes for validation\nList.propTypes = {\n  recordings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    })\n  ).isRequired,\n  onSelectRecording: PropTypes.func.isRequired,\n};\n\nexport default List;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAkB,CAAC,KAAK;EAClD,oBACEH,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BH,UAAU,CAACI,MAAM,GAAG,CAAC,GACpBJ,UAAU,CAACK,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC9BT,OAAA;MAC8B;MAC5BI,SAAS,EAAC,aAAa;MACvBM,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACK,SAAS,CAACG,EAAE,CAAE;MAAAN,QAAA,GAChD,YACW,EAACG,SAAS,CAACG,EAAE;IAAA,GAJlBH,SAAS,CAACG,EAAE,IAAIF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKpB,CACT,CAAC,gBAEFf,OAAA;MAAAK,QAAA,EAAG;IAAwB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GApBMf,IAAI;AAqBVA,IAAI,CAACgB,SAAS,GAAG;EACff,UAAU,EAAEJ,SAAS,CAACoB,OAAO,CAC3BpB,SAAS,CAACqB,KAAK,CAAC;IACdR,EAAE,EAAEb,SAAS,CAACsB,SAAS,CAAC,CAACtB,SAAS,CAACuB,MAAM,EAAEvB,SAAS,CAACwB,MAAM,CAAC,CAAC,CAACC;EAChE,CAAC,CACH,CAAC,CAACA,UAAU;EACZpB,iBAAiB,EAAEL,SAAS,CAAC0B,IAAI,CAACD;AACpC,CAAC;AAED,eAAetB,IAAI;AAAC,IAAAe,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}