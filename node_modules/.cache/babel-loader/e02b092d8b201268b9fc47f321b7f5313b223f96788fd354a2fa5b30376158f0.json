{"ast":null,"code":"var _jsxFileName = \"/home/vaslyb/Desktop/witheflow/web_app/annotator/src/components/EmotionModal.js\";\nimport React from 'react';\nimport './EmotionModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionStyles = {\n  happiness: {\n    backgroundColor: '#FFFF00',\n    color: '#000000'\n  },\n  // Yellow\n  sadness: {\n    backgroundColor: '#1E90FF',\n    color: '#FFFFFF'\n  },\n  // Dodger Blue\n  fear: {\n    backgroundColor: '#000000',\n    color: '#FFFFFF'\n  },\n  // Black\n  disgust: {\n    backgroundColor: '#008000',\n    color: '#FFFFFF'\n  },\n  // Green\n  anger: {\n    backgroundColor: '#FF0000',\n    color: '#FFFFFF'\n  },\n  // Red\n  surprise: {\n    backgroundColor: '#FFA500',\n    color: '#000000'\n  },\n  // Orange\n  neutral: {\n    backgroundColor: '#808080',\n    color: '#FFFFFF'\n  } // Grey\n};\nconst EmotionModal = ({\n  isOpen,\n  onClose,\n  onConfirm\n}) => {\n  if (!isOpen) return null;\n  const handleEmotionSelect = emotion => {\n    onConfirm(emotion); // Invoke the onConfirm callback when an emotion is selected\n    onClose(); // Close the modal\n  };\n  const renderEmotionButton = emotion => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleEmotionSelect(emotion),\n    className: \"emotion-button\",\n    style: emotionStyles[emotion],\n    \"aria-label\": `Select ${emotion}`,\n    children: emotion.charAt(0).toUpperCase() + emotion.slice(1)\n  }, emotion, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emotion-options\",\n        children: Object.keys(emotionStyles).map(renderEmotionButton)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        \"aria-label\": \"Close modal\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = EmotionModal;\nexport default EmotionModal;\nvar _c;\n$RefreshReg$(_c, \"EmotionModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","emotionStyles","happiness","backgroundColor","color","sadness","fear","disgust","anger","surprise","neutral","EmotionModal","isOpen","onClose","onConfirm","handleEmotionSelect","emotion","renderEmotionButton","onClick","className","style","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","role","Object","keys","map","_c","$RefreshReg$"],"sources":["/home/vaslyb/Desktop/witheflow/web_app/annotator/src/components/EmotionModal.js"],"sourcesContent":["import React from 'react';\nimport './EmotionModal.css';\n\nconst emotionStyles = {\n  happiness: { backgroundColor: '#FFFF00', color: '#000000' },  // Yellow\n  sadness: { backgroundColor: '#1E90FF', color: '#FFFFFF' },    // Dodger Blue\n  fear: { backgroundColor: '#000000', color: '#FFFFFF' },       // Black\n  disgust: { backgroundColor: '#008000', color: '#FFFFFF' },    // Green\n  anger: { backgroundColor: '#FF0000', color: '#FFFFFF' },      // Red\n  surprise: { backgroundColor: '#FFA500', color: '#000000' },   // Orange\n  neutral: { backgroundColor: '#808080', color: '#FFFFFF' }     // Grey\n};\n\nconst EmotionModal = ({ isOpen, onClose, onConfirm }) => {\n  if (!isOpen) return null;\n\n  const handleEmotionSelect = (emotion) => {\n    onConfirm(emotion);  // Invoke the onConfirm callback when an emotion is selected\n    onClose();  // Close the modal\n  };\n\n  const renderEmotionButton = (emotion) => (\n    <button\n      key={emotion}\n      onClick={() => handleEmotionSelect(emotion)}\n      className=\"emotion-button\"\n      style={emotionStyles[emotion]}\n      aria-label={`Select ${emotion}`}\n    >\n      {emotion.charAt(0).toUpperCase() + emotion.slice(1)}\n    </button>\n  );\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"emotion-options\">\n          {Object.keys(emotionStyles).map(renderEmotionButton)}\n        </div>\n        <button className=\"close-button\" onClick={onClose} aria-label=\"Close modal\">\n          &times;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EmotionModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,aAAa,GAAG;EACpBC,SAAS,EAAE;IAAEC,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAG;EAC9DC,OAAO,EAAE;IAAEF,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAK;EAC9DE,IAAI,EAAE;IAAEH,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAQ;EAC9DG,OAAO,EAAE;IAAEJ,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAK;EAC9DI,KAAK,EAAE;IAAEL,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAO;EAC9DK,QAAQ,EAAE;IAAEN,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC;EAAI;EAC9DM,OAAO,EAAE;IAAEP,eAAe,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CAAK;AAChE,CAAC;AAED,MAAMO,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EACvD,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMG,mBAAmB,GAAIC,OAAO,IAAK;IACvCF,SAAS,CAACE,OAAO,CAAC,CAAC,CAAE;IACrBH,OAAO,CAAC,CAAC,CAAC,CAAE;EACd,CAAC;EAED,MAAMI,mBAAmB,GAAID,OAAO,iBAClChB,OAAA;IAEEkB,OAAO,EAAEA,CAAA,KAAMH,mBAAmB,CAACC,OAAO,CAAE;IAC5CG,SAAS,EAAC,gBAAgB;IAC1BC,KAAK,EAAEnB,aAAa,CAACe,OAAO,CAAE;IAC9B,cAAa,UAASA,OAAQ,EAAE;IAAAK,QAAA,EAE/BL,OAAO,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGP,OAAO,CAACQ,KAAK,CAAC,CAAC;EAAC,GAN9CR,OAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAON,CACT;EAED,oBACE5B,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAE,QAAA,eAC5BrB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAACU,IAAI,EAAC,QAAQ;MAAC,cAAW,MAAM;MAAAR,QAAA,gBAC5DrB,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAE,QAAA,EAC7BS,MAAM,CAACC,IAAI,CAAC9B,aAAa,CAAC,CAAC+B,GAAG,CAACf,mBAAmB;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACN5B,OAAA;QAAQmB,SAAS,EAAC,cAAc;QAACD,OAAO,EAAEL,OAAQ;QAAC,cAAW,aAAa;QAAAQ,QAAA,EAAC;MAE5E;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAhCItB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}